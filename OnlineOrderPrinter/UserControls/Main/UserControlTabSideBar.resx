<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageListTabIcons.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageListTabIcons.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAW
        CgAAAk1TRnQBSQFMAgEBAwEAARgBAAEYAQABFgEAARYBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFY
        AwABFgMAAQEBAAEgBQABQAEeGgADhgHLHP8IAAMgAS4c/ygAAxcBIBD/A+MB9zgAA14BpAPwAfwc/wPZ
        AfQDIgExdAADjQHQBP8DTQGIAz4BaQM+AWkDPgFpCP8IAAMnAToE/wNdAaMDPgFpAz4BaQM+AWkDlgHW
        BP8cAAM4AVwIAAMtAUUE/wMRARcDEQEXA0UBdwT/CAADCgEOAykBPiAAAysBQgPnAfks/wO+AepwAAON
        AdAE/wMtAUYMAAj/CAADJwE6BP8DXQGjDAADlgHWBP8YAAPZAfQE/wPVAfIEAAMtAUUE/wgAA0MBdAT/
        BAADLQFFCP8DcAG4GAADWQGcEP8DRQF3AxQBGwMDAQQEAAMIAQsDIAEuA2cBsAz/A90B9QMbASZoAAON
        AdAE/wMtAUYMAAj/CAADJwE6BP8DXQGjDAADlgHWBP8UAAPZAfQE/wMkATYE/wPTAfEDegHCBP8IAAM7
        AWIE/wNWAZgE/wOfAdsDQwFzBP8DcAG4EAADLwFKDP8DRgF6IAADCwEPA5sB2Qj/A90B9WgAA40B0AT/
        Ay0BRgwACP8IAAMnAToE/wNdAaMMAAOWAdYE/xAAA6kB4AT/AxIBGQQAAxYBHwj/A2ABpgwAA9YB8wT/
        A5UB1QgAA0MBcwT/Ay0BRQwADP8DMQFNEAADdAG9BP8DFgEeEAADdAG9CP8DvgHqZAADjQHQBP8DLQFG
        DAAI/wgAAycBOgT/A10BowwAA5YB1gT/EAADZQGsBP8DQwF0NAADnwHbBP8DCgEOCAADxAHsCP8DPgFq
        FAAI/wOvAeMUAAObAdkI/wMiATFgAAONAdAE/wMtAUYMAAj/CAADJwE6BP8DXAGgDAADlgHWBP8UAANu
        AbcE/wM2AVkQAAMKAQ0DIAEvAwABARAAA5UB1QT/Ay0BRgwACP8DrwHjGAAI/wO+AeoUAAMLAQ8I/wPd
        AfVgAAONAdAE/wMtAUYMAAPdAfYE/wMsAUQEAAOOAdEE/wMyAU8MAAOWAdYE/xgAA90B9QOhAdwIAAMI
        AQsDxAHsDP8DYgGpDAAE/wNWAZgMAANGAXkI/wMcASgYAAj/A74B6hgAA2cBsAj/YAADjQHQBP8DLQFG
        DAADNQFVFP8DBwEKDAADlgHWBP8IAAMdASoQ/wNBAXEIAAT/A/AB/ANBAXADIwE0A44B0QT/A2IBqQgA
        A9YB8wz/A+UB+Az/HAAI/wO+AeoYAAMgAS4I/2AAA40B0AT/Ay0BRhAAA1cBmQz/AxkBIxAAA5YB1gT/
        CAAI/wNDAXQDQwF0Ax0BKQgAAzQBVAT/AxwBKAwAA44B0QT/AwABAQgAAzsBYgNDAXQDRQF3EP8cAAj/
        A74B6hgAAwcBCgj/YAADjQHQBP8DLQFGFwABAQMXASAYAAOWAdYE/wgACP8UAANmAa4E/xAAAyMBNAT/
        AyABLxAAAxEBFwz/A60B4hwACP8DvgHqHAAI/1gAAy8BSQMsAUMDVAGUBP8DGgElNAADWAGaBP8DAQEC
        A1gBmgj/FAADQwFzBP8QAANBAXAE/wMKAQ0QAAMRARcM/wP5Af4cAAj/A3EBuhgAAwMBBAj/WAAI/wNX
        AZkDGgElOwABAQMgAS8DrwHkBP8DVwGZEP8DIgEyBAADBwEKBP8DnwHbCAADHAEoA/AB/APEAewIAANg
        AaYc/xwAAxgBIQNrAbQDAgEDGAADFAEbCP9YAAM7AWEI/wODAcgDBwEKNAADIQEwCP8D7QH7BAADJwE6
        Ay0BRQMtAUUD7QH7A40B0AgAAzEBTRT/AwgBCwgABP8DegHCAy0BRQMtAUUDGAEhA34Bxwj/Aw4BEzwA
        A0UBdwj/XAADDgETCP8D3QH1AxABFiwAAzYBWAj/A8QB7AMEAQUMAAMtAUUE/wNZAZ4MAAMGAQgDQwFz
        A2YBrgM0AVQQAAT/A9MB8QwAAwYBCAj/A1YBlxgAA5gB1wT/Az4BaRgACP8D8AH8YAADBwEKA80B8Aj/
        AygBPCQAA1IBkgj/A2EBqBAAAywBQwT/A58B2zAAAxYBHwT/A9UB8gwAA+UB+Aj/AxIBGRAAAxgBIgz/
        FAADRgF6CP8DXgGkaAADjgHRCP8DQAFuGAADAgEDA54B2gj/AzkBXRQAA7sB6AT/DAADWQGeA44B0QMi
        ATIMAANDAXIDoQHcAzYBWQgAAyQBNgT/Az4BaQgAAyIBMgz/AwUBBwwAAwUBBwj/A5MB1BAAAzEBTQj/
        A+oB+nAAA0cBewj/A2sBtBAAAw8BFAPWAfMI/wMcASgYAAMxAU0E/wOVAdUEAAOfAdsE/wPtAfsE/wgA
        Ax0BKQT/A90B9QT/A0MBdAMSARkE/wPdAfUQAAN0Ab0M/wMSARkPAAEBAyQBNhAAAz4Bagz/AyoBQXQA
        AywBRAj/A8gB7gMLAQ8EAAMbASYI/wPHAe0DCgENIAADMgFPDP8DLQFGAy0BRQT/CAADQwF0BP8EAANu
        AbcI/wPdAfUYAAPTAfEM/wNWAZcDDgETFAADHAEoA68B4wz/A1gBnXwAAxUBHQj/A/YB/QNHAXsI/wN3
        AcEDBAEGKAADMQFOA7QB5QMsAUMEAAMtAUUE/wgAA0MBdAT/CAADZQGsA6MB3iAAA3QBvRT/A/kB/gOt
        AeIY/wMvAUqEAAMIAQsDlgHWDP8DRwF8QAADKAE9FP80AAMiATID5QH4JP8DxAHslAADWgGfBP8DIgEx
        SAADUgGRDP8DHgErPAADBgEIA34BxxT/A0UBeHQAAUIBTQE+BwABPgMAASgDAAFYAwABFgMAAQEBAAEB
        BQABCAEBFgAD/wEAAcABMAEPAfwBDwH/AcABBwHAAwABwAEwAQ8B7AEMAf8BAAEDAcADAAHHATEBzwHE
        AcgBfgEBAQABwAMAAccBMQHPAYABwAE8AR8B4AHAAwABxwExAc8BEAHjARwBPAF4AUADAAHHATEBzwEf
        Af8BGAJ8BAABxwExAc8BjwEeATgB/AF8BAABxwERAc8BzAEOAXAB/AF+BAABxwEBAcwBDAEGAQEB/AF+
        BAABxwGDAcwBGAHjAQEB/AF+BAABxwHPAcwB+QHjAcEB/AF/BAABBwH/AcAB+QHjAcEB/AF+BAABDwH/
        AcABCAHGAQEB/AF+BAABBwH/AcIBDAEGAQAB/wH+BAABgwH/AYMBjgEeAXAB/AF+BAABwQH/AQ8BHwH+
        ATgBeAF8BAAB8AH8AR8BOAHjARgBOAF4AUADAAH4AXgBPwEQAcABPAEcAfABQAMAAfwBEAF/AYAByAF+
        AQcCwAMAAf4BAAH/AcQBzAH/AQABAQHAAwAB/wEDAf8B/AEPAf8BgAEHAcADAAH/AccB/wH+AQ8B/wHg
        AR8BwAMACw==
</value>
  </data>
</root>