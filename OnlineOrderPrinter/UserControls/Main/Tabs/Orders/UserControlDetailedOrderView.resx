<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageListPrintImages.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageListPrintImages.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADG
        DQAAAk1TRnQBSQFMAwEBAAEIAQABCAEAATABAAEwAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABwAMA
        ATADAAEBAQABIAYAAZAqAAMQARSI/wMQART/AP8AcgADEAEUCP8D3QHjA9sB4QPbAeED2wHhA9sB4QPb
        AeED2wHhA9sB4QPbAeED2wHhA9sB4QPbAeED2wHhA9sB4QPbAeED2wHhA9sB4QPbAeED2wHhA9sB4QPb
        AeED2wHhA9sB4QPbAeED2wHhA9sB4QPbAeED2wHhA9sB4QPdAeMI/wMQART/AP8AcgADEAEUCP8DEQEV
        cAADEQEVCP8DEAEU/wD/AHIAAxABFAj/AxEBFXAAAxEBFQj/AxABFP8A/wBqAAMsATMDbwF7A3kBhQj/
        AxEBFXAAAxEBFQj/A3kBhQNvAXsDLAEz/wD/AGIAA28BexD/AxEBFXAAAxEBFRD/A28Be/8A/wBSAAMQ
        ARQDEAEUAxABFAMQARQDegGGBP8D5wHrCP8DEQEVcAADEQEVCP8D5wHrBP8DegGGAxABFAMQARQDEAEU
        AxABFP8A/wBCABj/A7oBwwj/AxEBFQwAAwcBCQM6AUMDPwFIAz8BSAM/AUgDPwFIAz8BSAM/AUgDPwFI
        Az8BSAM/AUgDPwFIAz8BSAM/AUgDPwFIAz8BSAM/AUgDPwFIAz8BSAM/AUgDOgFDAwcBCQwAAxEBFQj/
        A7oBwxj//wD/AEIAGP8DugHDCP8DEQEVDAADhwGTUP8DhwGTDAADEQEVCP8DugHDGP//AP8AQgAE/wPd
        AeMDEQEVAxEBFQN6AYYE/wO6AcMI/wMRARUMAANOAVgD1gHdA9sB4QPbAeED2wHhA9sB4QPbAeED2wHh
        A9sB4QPbAeED2wHhA9sB4QPbAeED2wHhA9sB4QPbAeED2wHhA9sB4QPbAeED2wHhA9YB3QNOAVgMAAMR
        ARUI/wO6AcME/wN6AYYDEQEVAxEBFQPdAeME//8A/wBCAAT/A9sB4QgAA28BewT/A7oBwwj/AxEBFXAA
        AxEBFQj/A7oBwwT/A28BewgAA9sB4QT//wD/AEIABP8D2wHhCAADbwF7BP8DugHDCP8DEQEVDAADBwEJ
        AzsBRAM/AUgDPwFIAz8BSAM/AUgDPwFIAz8BSAM/AUgDPwFIAz8BSAM/AUgDPwFIAz8BSAM/AUgDPwFI
        Az8BSAM/AUgDPwFIAz8BSAM7AUQDBwEJDAADEQEVCP8DugHDBP8DbwF7CAAD2wHhBP//AP8AQgAE/wPb
        AeEIAANBAUoD+QH7A4MBjwj/AxEBFQwAA4kBlFD/A4kBlAwAAxEBFQj/A4MBjwP5AfsDQQFKCAAD2wHh
        BP//AP8AQgAE/wPbAeEMAAMHAQkDEAEUCP8DEQEVDAADTgFZA9UB3APbAeED2wHhA9sB4QPbAeED2wHh
        A9sB4QPbAeED2wHhA9sB4QPbAeED2wHhA9sB4QPbAeED2wHhA9sB4QPbAeED2wHhA9sB4QPVAdwDTgFZ
        DAADEQEVCP8DEAEUAwcBCQwAA9sB4QT//wD/AEIABP8D2wHhEAADEAEUCP8DEQEVcAADEQEVCP8DEAEU
        EAAD2wHhBP//AP8AQgAE/wPbAeEQAAMQARQI/wMRARVwAAMRARUI/wMQARQQAAPbAeEE//8A/wBCAAT/
        A9sB4RAAAxABFAj/AxEBFXAAAxEBFQj/AxABFBAAA9sB4QT//wD/AEIABP8D2wHhEAADEAEUCP8DEQEV
        cAADEQEVCP8DEAEUEAAD2wHhBP//AP8AQgAE/wP5AfsD2gHgA9oB4APaAeAD2gHgA90B4wj/A90B4wPa
        AeAD2gHgA9oB4APaAeAD2gHgA9oB4APaAeAD2gHgA9oB4APaAeAD2gHgA9oB4APaAeAD2gHgA9oB4APa
        AeAD2gHgA9oB4APaAeAD2gHgA9oB4APaAeAD2gHgA9oB4APaAeAD2gHgA9oB4APaAeAD3QHjCP8D3QHj
        A9oB4APaAeAD2gHgA9oB4AP5AfsE//8A/wBCAMD//wD/AEIABP8D5AHpAz8BSAM/AUgDPwFIAz8BSAM/
        AUgDPwFIAz8BSAM/AUgDPwFIAz8BSAM/AUgDPwFIAz8BSAM/AUgDPwFIAz8BSAM/AUgDPwFIAz8BSAM/
        AUgDPwFIAz8BSAM/AUgDPwFIAz8BSAM/AUgDPwFIAz8BSAM/AUgDPwFIAz8BSAM/AUgDPwFIAz8BSAM/
        AUgDPwFIAz8BSAM/AUgDPwFIAz8BSAM/AUgDPwFIAz8BSAM/AUgD5AHpBP//AP8AQgAE/wPbAeGwAAPb
        AeEE//8A/wBCAAT/A9sB4YwAAxkBHgOJAZQDywHTA8sB0wOJAZQDGAEdDAAD2wHhBP//AP8AQgAE/wPb
        AeGIAAMnAS4D6AHsEP8D5wHrAygBLwgAA9sB4QT//wD/AEIABP8D2wHhiAADxgHOBP8D0gHZA1IBXQNT
        AV4D0QHYBP8DxAHMAwABAQQAA9sB4QT//wD/AEIABP8D2wHhhAADIgEoBP8D+QH7AxwBIggAAxwBIQP6
        AfwE/wMiASgEAAPbAeEE//8A/wBCAAT/A9sB4YQAAzgBQQT/A+MB6BAAA+MB6AT/AzgBQQQAA9sB4QT/
        /wD/AEIABP8D2wHhhAADFwEcA/0B/gP9Af4DNAE8CAADMwE7BP8D/AH9AxgBHQQAA9sB4QT//wD/AEIA
        BP8D2wHhiAADqQGzBP8D7gHxA4UBkQOFAZED7gHxBP8DqAGyCAAD2wHhBP//AP8AQgAE/wPbAeGIAAMT
        ARcDyAHQEP8DxwHPAxMBFwgAA9sB4QT//wD/AEIABP8D2wHhjAADBAEGA1YBYQOWAaADlgGgA1YBYQME
        AQYMAAPbAeEE//8A/wBCAAT/A9sB4bAAA9sB4QT//wD/AEIABP8D6wHvA28BewNvAXsDbwF7A28BewNv
        AXsDbwF7A28BewNvAXsDbwF7A28BewNvAXsDbwF7A28BewNvAXsDbwF7A28BewNvAXsDbwF7A28BewNv
        AXsDbwF7A28BewNvAXsDbwF7A28BewNvAXsDbwF7A28BewNvAXsDbwF7A28BewNvAXsDbwF7A28BewNv
        AXsDbwF7A28BewNvAXsDbwF7A28BewNvAXsDbwF7A28BewNvAXsD6wHvBP//AP8AQgDA//8A/wBCAAOj
        Aa4DowGuA6MBrgOjAa4DowGuA6MBrgOqAbQI/wOqAbQDowGuA6MBrgOjAa4DowGuA6MBrgOjAa4DowGu
        A6MBrgOjAa4DowGuA6MBrgOjAa4DowGuA6MBrgOjAa4DowGuA6MBrgOjAa4DowGuA6MBrgOjAa4DowGu
        A6MBrgOjAa4DowGuA6MBrgOjAa4DowGuA6oBtAj/A6oBtAOjAa4DowGuA6MBrgOjAa4DowGuA6MBrv8A
        /wBaAAMQARQI/wMRARVwAAMRARUI/wMQART/AP8AcgADEAEUCP8DEQEVcAADEQEVCP8DEAEU/wD/AHIA
        AxABFAj/AxEBFXAAAxEBFQj/AxABFP8A/wByAAMQARQI/wMRARVwAAMRARUI/wMQART/AP8AcgADEAEU
        CP8DEQEVcAADEQEVCP8DEAEU/wD/AHIAAxABFAj/AxEBFXAAAxEBFQj/AxABFP8A/wByAAMQARQI/wMR
        ARVwAAMRARUI/wMQART/AP8AcgADEAEUCP8DEQEVcAADEQEVCP8DEAEU/wD/AHIAAxABFAj/AxEBFXAA
        AxEBFQj/AxABFP8A/wByAAMQARQI/wMRARVwAAMRARUI/wMQART/AP8AcgADEAEUCP8DEQEVcAADEQEV
        CP8DEAEU/wD/AHIAAxABFAj/A90B4wPbAeED2wHhA9sB4QPbAeED2wHhA9sB4QPbAeED2wHhA9sB4QPb
        AeED2wHhA9sB4QPbAeED2wHhA9sB4QPbAeED2wHhA9sB4QPbAeED2wHhA9sB4QPbAeED2wHhA9sB4QPb
        AeED2wHhA9sB4QPbAeED3QHjCP8DEAEU/wD/AHIAAxABFIj/AxABFP8A/wBaAAFCAU0BPgcAAT4DAAEo
        AwABwAMAATADAAEBAQABAQUAAYABBBYAA/8BAAH8BAABPxIAAfwEAAE/EgAB/AE/Av8B/AE/EgAB/AE/
        Av8B/AE/EgAB8AE/Av8B/AEPEgAB8AE/Av8B/AEPEwABPwL/AfwUAAE4AgABHBQAATgCAAEcFAABOAIA
        ARwTAAEwAT8C/wH8AQwSAAEwATgCAAEcAQwSAAEwATgCAAEcAQwSAAI4AgACHBIAATwBPwL/AfwBPBIA
        ATwBPwL/AfwBPBIAATwBPwL/AfwBPBIAATwBPwL/AfwBPFoAAT8E/wH8EgABPwP/AfgBHBIAAT8D/wHw
        AQwSAAE/A/8B8AEEEgABPwP/AeEBhBIAAT8D/wHjAcQSAAE/A/8B4QGEEgABPwP/AfABDBIAAT8D/wHw
        AQwSAAE/A/8B+AEcEgABPwT/AfxaAAH8AT8C/wH8AT8SAAH8AT8C/wH8AT8SAAH8AT8C/wH8AT8SAAH8
        AT8C/wH8AT8SAAH8AT8C/wH8AT8SAAH8AT8C/wH8AT8SAAH8AT8C/wH8AT8SAAH8AT8C/wH8AT8SAAH8
        AT8C/wH8AT8SAAH8AT8C/wH8AT8SAAH8AT8C/wH8AT8SAAH8BAABPxIAAfwEAAE/EgAL
</value>
  </data>
  <metadata name="quantityDataGridViewTextBoxColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="itemNameDataGridViewTextBoxColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="modifierNameDataGridViewTextBoxColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>